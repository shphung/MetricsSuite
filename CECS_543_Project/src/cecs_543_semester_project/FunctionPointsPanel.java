/**
 * File: FunctionPointsPanel.java
 * Author: Steven Phung
 * Class: CECS-543-01 - Advanced Software Engineering
 * 
 * Assignment: Semester Project v.1.0
 * Date last modified: 2/24/2021
 * 
 * Purpose: This is the class that creates the panel to display and compute function points.
 */
package cecs_543_semester_project;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JTextField;

public class FunctionPointsPanel extends javax.swing.JPanel {

    //MAX_FIELDS is the amount of "Tabs" the user is allowed to open
    private final int MAX_FIELDS = 5;
    
    /**
     * Values that can be saved from this class:
     * 1. Language
     * 2. Input for EI, EO, EQ, ILF, EIF
     * 3. Weight factors
     * 4. Totals calculated from input
     * 5. Value adjustment factors
     * 6. function point (if available)
     */
    private String languageSelected;
    private String fpName;
    private double functionPoint;
    private JTextField[] textField_InputArray;
    private JTextField[] textField_OutputArray;
    private ButtonGroup[] buttonGroupArray;
    private int[] valueAdjustmentFactorsArray;
    
    //Constructor: FunctionPointsPanel(MainFrame object)
    //Create a new tab on function points panel in MainFrame.
    //Also initialize swing components, data fields, radio buttons, and buttons.
    public FunctionPointsPanel(String fpName, MainFrame mainFrame) {
        initComponents();
        initOtherComponents();
        initButtons();
        this.fpName = fpName;
        mainFrame.enableLanguageMenu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup_ExternalInputs = new javax.swing.ButtonGroup();
        buttonGroup_ExternalOutputs = new javax.swing.ButtonGroup();
        buttonGroup_ExternalInquiries = new javax.swing.ButtonGroup();
        buttonGroup_InternalLogicalFiles = new javax.swing.ButtonGroup();
        buttonGroup_ExternalInterfaceFiles = new javax.swing.ButtonGroup();
        button_ComputeFP = new javax.swing.JButton();
        button_ChangeLanguage = new javax.swing.JButton();
        button_ComputeCodeSize = new javax.swing.JButton();
        button_ValueAdjustments = new javax.swing.JButton();
        label_CurrentLanguage = new javax.swing.JLabel();
        textField_DisplayLanguage = new javax.swing.JTextField();
        textField_CodeSize = new javax.swing.JTextField();
        label_ExternalInputs = new javax.swing.JLabel();
        label_ExternalOutputs = new javax.swing.JLabel();
        label_ExternalInquiries = new javax.swing.JLabel();
        label_InternalLogicalFiles = new javax.swing.JLabel();
        label_ExternalInterfaceFiles = new javax.swing.JLabel();
        label_TotalCount = new javax.swing.JLabel();
        textField_ValueAdjustments = new javax.swing.JTextField();
        textField_FunctionPoints = new javax.swing.JTextField();
        textField_TotalCount = new javax.swing.JTextField();
        textField_Output_ExternalInterfaceFiles = new javax.swing.JTextField();
        textField_Output_InternalLogicalFiles = new javax.swing.JTextField();
        textField_Output_ExternalInquiries = new javax.swing.JTextField();
        textField_Output_ExternalOutputs = new javax.swing.JTextField();
        textField_Output_ExternalInputs = new javax.swing.JTextField();
        label_Title = new javax.swing.JLabel();
        textField_Input_ExternalInputs = new javax.swing.JTextField();
        textField_Input_ExternalOutputs = new javax.swing.JTextField();
        textField_Input_ExternalInquiries = new javax.swing.JTextField();
        textField_Input_InternalLogicalFiles = new javax.swing.JTextField();
        textField_Input_ExternalInterfaceFiles = new javax.swing.JTextField();
        radioButton_Simple_ExternalInputs = new javax.swing.JRadioButton();
        radioButton_Simple_ExternalOutputs = new javax.swing.JRadioButton();
        radioButton_Simple_ExternalInquiries = new javax.swing.JRadioButton();
        radioButton_Simple_InternalLogicalFiles = new javax.swing.JRadioButton();
        radioButton_Simple_ExternalInterfaceFiles = new javax.swing.JRadioButton();
        radioButton_Average_ExternalInputs = new javax.swing.JRadioButton();
        radioButton_Average_ExternalOutputs = new javax.swing.JRadioButton();
        radioButton_Average_ExternalInquiries = new javax.swing.JRadioButton();
        radioButton_Average_InternalLogicalFiles = new javax.swing.JRadioButton();
        radioButton_Average_ExternalInterfaceFiles = new javax.swing.JRadioButton();
        radioButton_Complex_ExternalInputs = new javax.swing.JRadioButton();
        radioButton_Complex_ExternalOutputs = new javax.swing.JRadioButton();
        radioButton_Complex_ExternalInquiries = new javax.swing.JRadioButton();
        radioButton_Complex_InternalLogicalFiles = new javax.swing.JRadioButton();
        radioButton_Complex_ExternalInterfaceFiles = new javax.swing.JRadioButton();
        label_Simple = new javax.swing.JLabel();
        label_Average = new javax.swing.JLabel();
        label_Complex = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1060, 640));
        setMinimumSize(new java.awt.Dimension(1060, 640));
        setPreferredSize(new java.awt.Dimension(1060, 640));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        button_ComputeFP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_ComputeFP.setText("Compute FP");
        button_ComputeFP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_ComputeFPMouseClicked(evt);
            }
        });
        add(button_ComputeFP, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 388, 151, -1));

        button_ChangeLanguage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_ChangeLanguage.setText("Change Language");
        button_ChangeLanguage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_ChangeLanguageMouseClicked(evt);
            }
        });
        add(button_ChangeLanguage, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 517, 151, -1));

        button_ComputeCodeSize.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_ComputeCodeSize.setText("Compute Code Size");
        button_ComputeCodeSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_ComputeCodeSizeMouseClicked(evt);
            }
        });
        add(button_ComputeCodeSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 474, -1, -1));

        button_ValueAdjustments.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_ValueAdjustments.setText("Value Adjustments");
        button_ValueAdjustments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                button_ValueAdjustmentsMouseClicked(evt);
            }
        });
        add(button_ValueAdjustments, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 431, 151, -1));

        label_CurrentLanguage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_CurrentLanguage.setText("Current Language");
        label_CurrentLanguage.setMaximumSize(new java.awt.Dimension(107, 25));
        label_CurrentLanguage.setMinimumSize(new java.awt.Dimension(107, 25));
        label_CurrentLanguage.setPreferredSize(new java.awt.Dimension(107, 25));
        add(label_CurrentLanguage, new org.netbeans.lib.awtextra.AbsoluteConstraints(659, 474, 119, -1));

        textField_DisplayLanguage.setEditable(false);
        textField_DisplayLanguage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_DisplayLanguage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textField_DisplayLanguage.setText("None");
        textField_DisplayLanguage.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_DisplayLanguage.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_DisplayLanguage.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_DisplayLanguage, new org.netbeans.lib.awtextra.AbsoluteConstraints(796, 474, -1, -1));

        textField_CodeSize.setEditable(false);
        textField_CodeSize.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_CodeSize.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_CodeSize.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_CodeSize.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_CodeSize.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_CodeSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 474, -1, -1));

        label_ExternalInputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_ExternalInputs.setText("External Inputs");
        label_ExternalInputs.setMaximumSize(new java.awt.Dimension(135, 25));
        label_ExternalInputs.setMinimumSize(new java.awt.Dimension(135, 25));
        label_ExternalInputs.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_ExternalInputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 103, 151, -1));

        label_ExternalOutputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_ExternalOutputs.setText("External Outputs");
        label_ExternalOutputs.setMaximumSize(new java.awt.Dimension(135, 25));
        label_ExternalOutputs.setMinimumSize(new java.awt.Dimension(135, 25));
        label_ExternalOutputs.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_ExternalOutputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 146, 151, -1));

        label_ExternalInquiries.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_ExternalInquiries.setText("External Inquiries");
        label_ExternalInquiries.setMaximumSize(new java.awt.Dimension(135, 25));
        label_ExternalInquiries.setMinimumSize(new java.awt.Dimension(135, 25));
        label_ExternalInquiries.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_ExternalInquiries, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 189, 151, -1));

        label_InternalLogicalFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_InternalLogicalFiles.setText("Internal Logical Files");
        label_InternalLogicalFiles.setMaximumSize(new java.awt.Dimension(135, 25));
        label_InternalLogicalFiles.setMinimumSize(new java.awt.Dimension(135, 25));
        label_InternalLogicalFiles.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_InternalLogicalFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 232, 151, -1));

        label_ExternalInterfaceFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_ExternalInterfaceFiles.setText("External Interface Files");
        label_ExternalInterfaceFiles.setMaximumSize(new java.awt.Dimension(135, 25));
        label_ExternalInterfaceFiles.setMinimumSize(new java.awt.Dimension(135, 25));
        label_ExternalInterfaceFiles.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_ExternalInterfaceFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 275, 151, -1));

        label_TotalCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_TotalCount.setText("Total Count");
        label_TotalCount.setMaximumSize(new java.awt.Dimension(135, 25));
        label_TotalCount.setMinimumSize(new java.awt.Dimension(135, 25));
        label_TotalCount.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_TotalCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 328, 151, -1));

        textField_ValueAdjustments.setEditable(false);
        textField_ValueAdjustments.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_ValueAdjustments.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_ValueAdjustments.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_ValueAdjustments.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_ValueAdjustments.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_ValueAdjustments, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 431, -1, -1));

        textField_FunctionPoints.setEditable(false);
        textField_FunctionPoints.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_FunctionPoints.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_FunctionPoints.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_FunctionPoints.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_FunctionPoints.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_FunctionPoints, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 388, -1, -1));

        textField_TotalCount.setEditable(false);
        textField_TotalCount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_TotalCount.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_TotalCount.setText("30");
        textField_TotalCount.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_TotalCount.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_TotalCount.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_TotalCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 328, -1, -1));

        textField_Output_ExternalInterfaceFiles.setEditable(false);
        textField_Output_ExternalInterfaceFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Output_ExternalInterfaceFiles.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_Output_ExternalInterfaceFiles.setText("7");
        textField_Output_ExternalInterfaceFiles.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalInterfaceFiles.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalInterfaceFiles.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_Output_ExternalInterfaceFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 275, -1, -1));

        textField_Output_InternalLogicalFiles.setEditable(false);
        textField_Output_InternalLogicalFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Output_InternalLogicalFiles.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_Output_InternalLogicalFiles.setText("10");
        textField_Output_InternalLogicalFiles.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Output_InternalLogicalFiles.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Output_InternalLogicalFiles.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_Output_InternalLogicalFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 232, -1, -1));

        textField_Output_ExternalInquiries.setEditable(false);
        textField_Output_ExternalInquiries.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Output_ExternalInquiries.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_Output_ExternalInquiries.setText("4");
        textField_Output_ExternalInquiries.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalInquiries.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalInquiries.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_Output_ExternalInquiries, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 189, -1, -1));

        textField_Output_ExternalOutputs.setEditable(false);
        textField_Output_ExternalOutputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Output_ExternalOutputs.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_Output_ExternalOutputs.setText("5");
        textField_Output_ExternalOutputs.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalOutputs.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalOutputs.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_Output_ExternalOutputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 146, -1, -1));

        textField_Output_ExternalInputs.setEditable(false);
        textField_Output_ExternalInputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Output_ExternalInputs.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        textField_Output_ExternalInputs.setText("4");
        textField_Output_ExternalInputs.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalInputs.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Output_ExternalInputs.setPreferredSize(new java.awt.Dimension(107, 25));
        add(textField_Output_ExternalInputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(978, 103, -1, -1));

        label_Title.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        label_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_Title.setText("Weighting Factors");
        label_Title.setMaximumSize(new java.awt.Dimension(135, 25));
        label_Title.setMinimumSize(new java.awt.Dimension(135, 25));
        label_Title.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 11, 200, 33));

        textField_Input_ExternalInputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Input_ExternalInputs.setText("1");
        textField_Input_ExternalInputs.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInputs.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInputs.setPreferredSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInputs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalInputsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalInputsKeyTyped(evt);
            }
        });
        add(textField_Input_ExternalInputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 103, -1, -1));

        textField_Input_ExternalOutputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Input_ExternalOutputs.setText("1");
        textField_Input_ExternalOutputs.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalOutputs.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalOutputs.setPreferredSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalOutputs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalOutputsKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalOutputsKeyTyped(evt);
            }
        });
        add(textField_Input_ExternalOutputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 146, -1, -1));

        textField_Input_ExternalInquiries.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Input_ExternalInquiries.setText("1");
        textField_Input_ExternalInquiries.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInquiries.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInquiries.setPreferredSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInquiries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalInquiriesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalInquiriesKeyTyped(evt);
            }
        });
        add(textField_Input_ExternalInquiries, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 189, -1, -1));

        textField_Input_InternalLogicalFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Input_InternalLogicalFiles.setText("1");
        textField_Input_InternalLogicalFiles.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Input_InternalLogicalFiles.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Input_InternalLogicalFiles.setPreferredSize(new java.awt.Dimension(107, 25));
        textField_Input_InternalLogicalFiles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField_Input_InternalLogicalFilesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textField_Input_InternalLogicalFilesKeyTyped(evt);
            }
        });
        add(textField_Input_InternalLogicalFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 232, -1, -1));

        textField_Input_ExternalInterfaceFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textField_Input_ExternalInterfaceFiles.setText("1");
        textField_Input_ExternalInterfaceFiles.setMaximumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInterfaceFiles.setMinimumSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInterfaceFiles.setPreferredSize(new java.awt.Dimension(107, 25));
        textField_Input_ExternalInterfaceFiles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalInterfaceFilesKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textField_Input_ExternalInterfaceFilesKeyTyped(evt);
            }
        });
        add(textField_Input_ExternalInterfaceFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 275, -1, -1));

        radioButton_Simple_ExternalInputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Simple_ExternalInputs.setText("3");
        radioButton_Simple_ExternalInputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Simple_ExternalInputsActionPerformed(evt);
            }
        });
        add(radioButton_Simple_ExternalInputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 103, -1, -1));

        radioButton_Simple_ExternalOutputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Simple_ExternalOutputs.setText("4");
        radioButton_Simple_ExternalOutputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Simple_ExternalOutputsActionPerformed(evt);
            }
        });
        add(radioButton_Simple_ExternalOutputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 146, -1, -1));

        radioButton_Simple_ExternalInquiries.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Simple_ExternalInquiries.setText("3");
        radioButton_Simple_ExternalInquiries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Simple_ExternalInquiriesActionPerformed(evt);
            }
        });
        add(radioButton_Simple_ExternalInquiries, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 189, -1, -1));

        radioButton_Simple_InternalLogicalFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Simple_InternalLogicalFiles.setText("7");
        radioButton_Simple_InternalLogicalFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Simple_InternalLogicalFilesActionPerformed(evt);
            }
        });
        add(radioButton_Simple_InternalLogicalFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 232, -1, -1));

        radioButton_Simple_ExternalInterfaceFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Simple_ExternalInterfaceFiles.setText("5");
        radioButton_Simple_ExternalInterfaceFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Simple_ExternalInterfaceFilesActionPerformed(evt);
            }
        });
        add(radioButton_Simple_ExternalInterfaceFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 275, -1, -1));

        radioButton_Average_ExternalInputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Average_ExternalInputs.setText("4");
        radioButton_Average_ExternalInputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Average_ExternalInputsActionPerformed(evt);
            }
        });
        add(radioButton_Average_ExternalInputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 103, -1, -1));

        radioButton_Average_ExternalOutputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Average_ExternalOutputs.setText("5");
        radioButton_Average_ExternalOutputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Average_ExternalOutputsActionPerformed(evt);
            }
        });
        add(radioButton_Average_ExternalOutputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 146, -1, -1));

        radioButton_Average_ExternalInquiries.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Average_ExternalInquiries.setText("4");
        radioButton_Average_ExternalInquiries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Average_ExternalInquiriesActionPerformed(evt);
            }
        });
        add(radioButton_Average_ExternalInquiries, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 189, -1, -1));

        radioButton_Average_InternalLogicalFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Average_InternalLogicalFiles.setText("10");
        radioButton_Average_InternalLogicalFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Average_InternalLogicalFilesActionPerformed(evt);
            }
        });
        add(radioButton_Average_InternalLogicalFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 232, -1, -1));

        radioButton_Average_ExternalInterfaceFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Average_ExternalInterfaceFiles.setText("7");
        radioButton_Average_ExternalInterfaceFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Average_ExternalInterfaceFilesActionPerformed(evt);
            }
        });
        add(radioButton_Average_ExternalInterfaceFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(631, 275, -1, -1));

        radioButton_Complex_ExternalInputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Complex_ExternalInputs.setText("6");
        radioButton_Complex_ExternalInputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Complex_ExternalInputsActionPerformed(evt);
            }
        });
        add(radioButton_Complex_ExternalInputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 103, -1, -1));

        radioButton_Complex_ExternalOutputs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Complex_ExternalOutputs.setText("7");
        radioButton_Complex_ExternalOutputs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Complex_ExternalOutputsActionPerformed(evt);
            }
        });
        add(radioButton_Complex_ExternalOutputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 146, -1, -1));

        radioButton_Complex_ExternalInquiries.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Complex_ExternalInquiries.setText("6");
        radioButton_Complex_ExternalInquiries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Complex_ExternalInquiriesActionPerformed(evt);
            }
        });
        add(radioButton_Complex_ExternalInquiries, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 189, -1, -1));

        radioButton_Complex_InternalLogicalFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Complex_InternalLogicalFiles.setText("15");
        radioButton_Complex_InternalLogicalFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Complex_InternalLogicalFilesActionPerformed(evt);
            }
        });
        add(radioButton_Complex_InternalLogicalFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 232, -1, -1));

        radioButton_Complex_ExternalInterfaceFiles.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        radioButton_Complex_ExternalInterfaceFiles.setText("10");
        radioButton_Complex_ExternalInterfaceFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButton_Complex_ExternalInterfaceFilesActionPerformed(evt);
            }
        });
        add(radioButton_Complex_ExternalInterfaceFiles, new org.netbeans.lib.awtextra.AbsoluteConstraints(771, 275, -1, -1));

        label_Simple.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_Simple.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_Simple.setText("Simple");
        label_Simple.setMaximumSize(new java.awt.Dimension(135, 25));
        label_Simple.setMinimumSize(new java.awt.Dimension(135, 25));
        label_Simple.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_Simple, new org.netbeans.lib.awtextra.AbsoluteConstraints(455, 67, 124, -1));

        label_Average.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_Average.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_Average.setText("Average");
        label_Average.setMaximumSize(new java.awt.Dimension(135, 25));
        label_Average.setMinimumSize(new java.awt.Dimension(135, 25));
        label_Average.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_Average, new org.netbeans.lib.awtextra.AbsoluteConstraints(585, 67, 124, -1));

        label_Complex.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label_Complex.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_Complex.setText("Complex");
        label_Complex.setMaximumSize(new java.awt.Dimension(135, 25));
        label_Complex.setMinimumSize(new java.awt.Dimension(135, 25));
        label_Complex.setPreferredSize(new java.awt.Dimension(135, 25));
        add(label_Complex, new org.netbeans.lib.awtextra.AbsoluteConstraints(715, 67, 124, -1));
    }// </editor-fold>//GEN-END:initComponents

    //Events
    private void button_ComputeFPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_ComputeFPMouseClicked
        computeFunctionPoint();
        button_ComputeCodeSize.setEnabled(true);
    }//GEN-LAST:event_button_ComputeFPMouseClicked

    private void button_ChangeLanguageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_ChangeLanguageMouseClicked
        chooseLanguage();
    }//GEN-LAST:event_button_ChangeLanguageMouseClicked

    private void button_ComputeCodeSizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_ComputeCodeSizeMouseClicked
        computeCodeSize();
    }//GEN-LAST:event_button_ComputeCodeSizeMouseClicked

    private void button_ValueAdjustmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_button_ValueAdjustmentsMouseClicked
        setValueAdjustmentFactor();
    }//GEN-LAST:event_button_ValueAdjustmentsMouseClicked

    private void textField_Input_ExternalInputsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalInputsKeyTyped
        updateInputValues(0, evt);
    }//GEN-LAST:event_textField_Input_ExternalInputsKeyTyped

    private void textField_Input_ExternalOutputsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalOutputsKeyTyped
        updateInputValues(1, evt);
    }//GEN-LAST:event_textField_Input_ExternalOutputsKeyTyped

    private void textField_Input_ExternalInquiriesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalInquiriesKeyTyped
        updateInputValues(2, evt);
    }//GEN-LAST:event_textField_Input_ExternalInquiriesKeyTyped

    private void textField_Input_InternalLogicalFilesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_InternalLogicalFilesKeyTyped
        updateInputValues(3, evt);
    }//GEN-LAST:event_textField_Input_InternalLogicalFilesKeyTyped

    private void textField_Input_ExternalInterfaceFilesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalInterfaceFilesKeyTyped
        updateInputValues(4, evt);
    }//GEN-LAST:event_textField_Input_ExternalInterfaceFilesKeyTyped

    private void radioButton_Simple_ExternalInputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Simple_ExternalInputsActionPerformed
        updateOutputValues(0);
    }//GEN-LAST:event_radioButton_Simple_ExternalInputsActionPerformed

    private void radioButton_Average_ExternalInputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Average_ExternalInputsActionPerformed
        updateOutputValues(0);
    }//GEN-LAST:event_radioButton_Average_ExternalInputsActionPerformed

    private void radioButton_Complex_ExternalInputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Complex_ExternalInputsActionPerformed
        updateOutputValues(0);
    }//GEN-LAST:event_radioButton_Complex_ExternalInputsActionPerformed

    private void radioButton_Simple_ExternalOutputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Simple_ExternalOutputsActionPerformed
        updateOutputValues(1);
    }//GEN-LAST:event_radioButton_Simple_ExternalOutputsActionPerformed

    private void radioButton_Average_ExternalOutputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Average_ExternalOutputsActionPerformed
        updateOutputValues(1);
    }//GEN-LAST:event_radioButton_Average_ExternalOutputsActionPerformed

    private void radioButton_Complex_ExternalOutputsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Complex_ExternalOutputsActionPerformed
        updateOutputValues(1);
    }//GEN-LAST:event_radioButton_Complex_ExternalOutputsActionPerformed

    private void radioButton_Simple_ExternalInquiriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Simple_ExternalInquiriesActionPerformed
        updateOutputValues(2);
    }//GEN-LAST:event_radioButton_Simple_ExternalInquiriesActionPerformed

    private void radioButton_Average_ExternalInquiriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Average_ExternalInquiriesActionPerformed
        updateOutputValues(2);
    }//GEN-LAST:event_radioButton_Average_ExternalInquiriesActionPerformed

    private void radioButton_Complex_ExternalInquiriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Complex_ExternalInquiriesActionPerformed
        updateOutputValues(2);
    }//GEN-LAST:event_radioButton_Complex_ExternalInquiriesActionPerformed

    private void radioButton_Simple_InternalLogicalFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Simple_InternalLogicalFilesActionPerformed
        updateOutputValues(3);
    }//GEN-LAST:event_radioButton_Simple_InternalLogicalFilesActionPerformed

    private void radioButton_Average_InternalLogicalFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Average_InternalLogicalFilesActionPerformed
        updateOutputValues(3);
    }//GEN-LAST:event_radioButton_Average_InternalLogicalFilesActionPerformed

    private void radioButton_Complex_InternalLogicalFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Complex_InternalLogicalFilesActionPerformed
        updateOutputValues(3);
    }//GEN-LAST:event_radioButton_Complex_InternalLogicalFilesActionPerformed

    private void radioButton_Simple_ExternalInterfaceFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Simple_ExternalInterfaceFilesActionPerformed
        updateOutputValues(4);
    }//GEN-LAST:event_radioButton_Simple_ExternalInterfaceFilesActionPerformed

    private void radioButton_Average_ExternalInterfaceFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Average_ExternalInterfaceFilesActionPerformed
        updateOutputValues(4);
    }//GEN-LAST:event_radioButton_Average_ExternalInterfaceFilesActionPerformed

    private void radioButton_Complex_ExternalInterfaceFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButton_Complex_ExternalInterfaceFilesActionPerformed
        updateOutputValues(4);
    }//GEN-LAST:event_radioButton_Complex_ExternalInterfaceFilesActionPerformed

    private void textField_Input_ExternalInputsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalInputsKeyReleased
        updateOutputValues(0);
    }//GEN-LAST:event_textField_Input_ExternalInputsKeyReleased

    private void textField_Input_ExternalOutputsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalOutputsKeyReleased
        updateOutputValues(1);
    }//GEN-LAST:event_textField_Input_ExternalOutputsKeyReleased

    private void textField_Input_ExternalInquiriesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalInquiriesKeyReleased
        updateOutputValues(2);
    }//GEN-LAST:event_textField_Input_ExternalInquiriesKeyReleased

    private void textField_Input_InternalLogicalFilesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_InternalLogicalFilesKeyReleased
        updateOutputValues(3);
    }//GEN-LAST:event_textField_Input_InternalLogicalFilesKeyReleased

    private void textField_Input_ExternalInterfaceFilesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField_Input_ExternalInterfaceFilesKeyReleased
        updateOutputValues(4);
    }//GEN-LAST:event_textField_Input_ExternalInterfaceFilesKeyReleased

    //Method: getString(String, string, string, string)
    //Returns project name, product name, creator name, comments, language, VAFs, inputs, outputs,
    //radio values, and function points (if available) as a single string.
    public String getString(String project, String product, String creator, String comments) {
        String s = "";
        s += project + ",";
        s += product + ",";
        s += creator + ",";
        s += comments + ",";
        s += fpName + ",";
        s += getLanguage() + ",";
        s += getVAFs() + ",";
        s += getInputs() + ",";
        s += getOutputs() + ",";
        s += getRadioValues() + ",";
        s += getFP() + ",";
        return s;
    }
    
    //Method: getLanguage()
    //Return language.
    public String getLanguage() {
        return languageSelected;
    }
    
    //Method: getVAFs()
    //Return String list of VAF values.
    public String getVAFs() {
        String s = "";
        for(int i = 0; i < valueAdjustmentFactorsArray.length; i++) {
            if(i == (valueAdjustmentFactorsArray.length-1)) {
                s += valueAdjustmentFactorsArray[i];
            } else {
                s += valueAdjustmentFactorsArray[i] + " ";
            }
        }
        return s;
    }
    
    //Method: getInputs()
    //Return String list of input values.
    public String getInputs() {
        String s = "";
        for(int i = 0; i < textField_InputArray.length; i++) {
            if(i == (textField_InputArray.length-1)) {
                s += textField_InputArray[i].getText();
            } else {
                s += textField_InputArray[i].getText() + " ";
            }
        }
        return s;
    }
    
    //Method: getOutputs()
    //Return String list of output values.
    public String getOutputs() {
        String s = "";
        for(int i = 0; i < textField_OutputArray.length; i++) {
            if(i == (textField_OutputArray.length-1)) {
                s += textField_OutputArray[i].getText();
            } else {
                s += textField_OutputArray[i].getText() + " ";
            }
        }
        return s;
    }
    
    //Method: getRadioValues()
    //Return String list of radio values.
    public String getRadioValues() {
        String s = "";
        for(int i = 0; i < buttonGroupArray.length; i++) {
            for (Enumeration<AbstractButton> buttons = buttonGroupArray[i].getElements(); buttons.hasMoreElements();) {
                AbstractButton button = buttons.nextElement();
                if(button.isSelected() && i == (buttonGroupArray.length-1)) {
                    s += button.getText();
                } else if(button.isSelected()) {
                    s += button.getText() + " ";
                }
            }
        }
        return s;
    }
    
    //Method: getFP()
    //Return function point value.
    public String getFP() {
        return String.valueOf(functionPoint);
    }
    
    //Method: loadValueAdjustmentFactors(String[])
    //Given an array of VAF values, set current VAF array to those values and then
    //set the new VAF value.
    public void loadValueAdjustmentFactors(String[] s) {
        for(int i = 0; i < s.length; i++) {
            valueAdjustmentFactorsArray[i] = Integer.parseInt(s[i]);
        }
        setTotalVAFValue();
    }
    
    //Method: loadInputValues(String[])
    //Load given input values into current input text fields using input array.
    public void loadInputValues(String[] s) {
        for(int i = 0; i < s.length; i++) {
            textField_InputArray[i].setText(s[i]);
        }
    }
    
    //Method: loadOutputValues(String[])
    //Load given output values into current output text fields using output array.
    public void loadOutputValues(String[] s) {
        for(int i = 0; i < s.length; i++) {
            textField_OutputArray[i].setText(s[i]);
        }
    }
    
    //Method: loadRadioValues(String[])
    //Load selected radio values.
    public void loadRadioValues(String[] s) {
        for(int i = 0; i < s.length; i++) {
            for (Enumeration<AbstractButton> buttons = buttonGroupArray[i].getElements(); buttons.hasMoreElements();) {
                AbstractButton button = buttons.nextElement();
                //Every button in every button group is unique
                //Therefore, given a radio value, select if when a match is passed in the loop.
                if (button.getText().equals(s[i])) {
                    button.setSelected(true);
                }
            }
        }
        computeTotalCount();
    }
    
    //Method: computeCodeSize()
    //Compute code size based on formula: (functionPoint * languageAvg)
    //Format result and then print to screen.
    private void computeCodeSize() {
        int languageAvg = 0;
        //Values provided by lecture.
        switch(languageSelected) {
            case "Assembler":
                languageAvg = 209;
                break;
            case "Ada 95":
                languageAvg = 154;
                break;
            case "C":
                languageAvg = 148;
                break;
            case "C++":
                languageAvg = 59;
                break;
            case "C#":
                languageAvg = 58;
                break;
            case "COBOL":
                languageAvg = 80;
                break;
            case "FORTRAN":
                languageAvg = 90;
                break;
            case "HTML":
                languageAvg = 43;
                break;
            case "Java":
                languageAvg = 55;
                break;
            case "JavaScript":
                languageAvg = 54;
                break;
            case "VB Script":
                languageAvg = 38;
                break;
            case "Visual Basic":
                languageAvg = 50;
                break;
            default:
                break;
        }
        double codeSize = functionPoint * languageAvg;
        DecimalFormat formatter = new DecimalFormat("#,###.00");
        textField_CodeSize.setText(formatter.format(codeSize));
    }
    
    public void updateCodeSize() {
        if(button_ComputeCodeSize.isEnabled()) {
            computeCodeSize();
        }
    }
    
    //Method: computeFunctionPoint()
    //Compute function points based on formula: [totalCount * (0.65f + (0.01f * vAF))]
    //Format result and then print to screen.
    private void computeFunctionPoint() {
        int totalCount = Integer.parseInt(textField_TotalCount.getText());
        int vAF = Integer.parseInt(textField_ValueAdjustments.getText());
        functionPoint = totalCount * (0.65f + (0.01f * vAF));
        DecimalFormat formatter = new DecimalFormat("#,###.00");
        textField_FunctionPoints.setText(formatter.format(functionPoint));
    }
    
    //Method: updateInputValues(int, KeyEvent)
    //Given an index of which input is being accessed and a KeyEvent e,
    //update the text in the input text field. If input is invalid, display
    //the text as red, otherwise display as black.
    private void updateInputValues(int fieldNumber, KeyEvent e) {
        int keyTyped = -1;
        //48-57 means the key 0-9 was pressed
        //8 means the backspace key was pressed
        switch(e.getKeyChar()) {
            case 48:
                keyTyped = 0;
                break;
            case 49:
                keyTyped = 1;
                break;
            case 50:
                keyTyped = 2;
                break;
            case 51:
                keyTyped = 3;
                break;
            case 52:
                keyTyped = 4;
                break;
            case 53:
                keyTyped = 5;
                break;
            case 54:
                keyTyped = 6;
                break;
            case 55:
                keyTyped = 7;
                break;
            case 56:
                keyTyped = 8;
                break;
            case 57:
                keyTyped = 9;
                break;
            case 8:
                keyTyped = 127;
                break;
            default:
                keyTyped = -1;
                break;
        }
        //Based on the updated text, if the input is not a non-negative integer
        //The text will be set to red to indicate invalid input.
        //If the input is just a non-negative integer, it will be set to black.
        String input = textField_InputArray[fieldNumber].getText();
        if(keyTyped == -1 || input.matches(".*[A-Za-z].*") ||
                input.matches(".*[\\\\\"\\~\\@\\#\\%\\&\\:\\;\\'\\,\\/\\(\\)\\[\\]\\{\\}"
                + "\\^\\$\\|\\?\\*\\+\\.\\<\\>\\-\\=\\!\\_].*")) {
            textField_InputArray[fieldNumber].setForeground(Color.RED);
        } else if (keyTyped >= 0 && keyTyped <= 9) {
            textField_InputArray[fieldNumber].setForeground(Color.BLACK);
        }
        //In the case that the user deletes an invalid character and the new input is valid, set to black.
        if(keyTyped == 127 && input.matches("^\\d*") && !input.matches("-1")) {
            textField_InputArray[fieldNumber].setForeground(Color.BLACK);
        }
    }
    
    //Method: updateOutputValues(int)
    //Given an index of an input text field, get the input, radio value selected,
    //calculate the output by multiplying input * radio value, and output that to
    //the output text field with the same index. Finally, add this value to the
    //total count by computing total count.
    private void updateOutputValues(int indexNumber) {
        try {
            int firstInt = Integer.parseInt(textField_InputArray[indexNumber].getText());
            int secondInt = getSelectedRadioButton(indexNumber);
            int output = firstInt * secondInt;
            textField_OutputArray[indexNumber].setText(String.valueOf(output));
            computeTotalCount();
        } catch(NumberFormatException e) {
        }
    }
    
    //Method: setLanguage(String)
    //Set languageSelected to s, and display this language to the text field.
    public void setLanguage(String s) {
        languageSelected = s;
        textField_DisplayLanguage.setText(languageSelected);
    }
    
    //Method: setTotalVAFValue()
    //Computes total VAF by summing values in the VAF array
    //and placing this summation in its own text field.
    public void setTotalVAFValue() {
        int sum = 0;
        for(int i = 0; i < valueAdjustmentFactorsArray.length; i++) {
            sum += valueAdjustmentFactorsArray[i];
        }
        textField_ValueAdjustments.setText(String.valueOf(sum));
    }
    
    //Method: computeTotalCount()
    //Computes total count by summing values in the output text fields
    //and placing this total value in its own text field.
    private void computeTotalCount() {
        int sum = 0;
        for(int i = 0; i < textField_OutputArray.length; i++) {
            sum += Integer.parseInt(textField_OutputArray[i].getText());
        }
        textField_TotalCount.setText(String.valueOf(sum));
    }
    
    //Method: setValueAdjustmentFactor()
    //Create new dialog to get new ValueAdjustmentFactors
    //This dialog is passed the current VAFArray to restore the previous state
    //of the dialog.
    private void setValueAdjustmentFactor() {
        new ValueAdjustmentFactors(this, valueAdjustmentFactorsArray);
    }
    
    //Method: setFunctionPoint(String)
    //Given a String, convert it to a double, format the double, and then output it.
    public void setFunctionPoint(String s) {
        functionPoint = Double.parseDouble(s);
        DecimalFormat formatter = new DecimalFormat("#,###.00");
        textField_FunctionPoints.setText(formatter.format(functionPoint));
    }
    
    //Method: getSelectedRadioButton(int)
    //Given an int that identifies which radio button group to iterate through,
    //access the group's array and find which radio button is selected, then
    //return the number associated with the selected radio button.
    private int getSelectedRadioButton(int groupNumber) {
        for (Enumeration<AbstractButton> buttons = buttonGroupArray[groupNumber].getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return Integer.parseInt(button.getText());
            }
        }
        return -1;
    }
    
    //Method: enableFPButton()
    //Open new dialog window to allow user to select a language.
    public void chooseLanguage() {
        new LangSelector(this);
    }
    
    //Method: enableFPButton()
    //Enable computation of FP.
    public void enableFPButton() {
        button_ComputeFP.setEnabled(true);
    }
    
    //Method: enableVAFButton()
    //Enable computation of VAF.
    public void enableVAFButton() {
        button_ValueAdjustments.setEnabled(true);
    }
    
    //Method: enableAllButtons()
    //Enable all buttons, case: file loaded.
    public void enableAllButtons() {
        button_ValueAdjustments.setEnabled(true);
        button_ComputeFP.setEnabled(true);
        button_ComputeCodeSize.setEnabled(true);
    }
    
    //Method: initFields()
    //Initialize data fields to default values
    private void initFields() {
        textField_InputArray = new JTextField[MAX_FIELDS];
        textField_OutputArray = new JTextField[MAX_FIELDS];
        buttonGroupArray = new ButtonGroup[MAX_FIELDS];
        valueAdjustmentFactorsArray = new int[14];
    }
    
    //Method: initButtons()
    //Disable buttons computeFP, computeCodeSize, and computeVAF
    //until language is selected.
    private void initButtons() {
        button_ComputeFP.setEnabled(false);
        button_ComputeCodeSize.setEnabled(false);
        button_ValueAdjustments.setEnabled(false);
    }
    
    //Method: initOtherComponents()
    //Initialize arrays.
    private void initOtherComponents() {
        initFields();
        initInputArray();
        initOutputArray();
        initRadioButtons();
        initRadioButtonsArray();
    }
    
    //Method: initInputArray()
    //Place all input textfields into an array.
    private void initInputArray() {
        textField_InputArray[0] = textField_Input_ExternalInputs;
        textField_InputArray[1] = textField_Input_ExternalOutputs;
        textField_InputArray[2] = textField_Input_ExternalInquiries;
        textField_InputArray[3] = textField_Input_InternalLogicalFiles;
        textField_InputArray[4] = textField_Input_ExternalInterfaceFiles;
    }
    
    //Method: initOutputArray()
    //Place all output textfields into an array.
    private void initOutputArray() {
        textField_OutputArray[0] = textField_Output_ExternalInputs;
        textField_OutputArray[1] = textField_Output_ExternalOutputs;
        textField_OutputArray[2] = textField_Output_ExternalInquiries;
        textField_OutputArray[3] = textField_Output_InternalLogicalFiles;
        textField_OutputArray[4] = textField_Output_ExternalInterfaceFiles;
    }
    
    //Method: initRadioButtonsArray()
    //Add each radio button group into an array.
    private void initRadioButtonsArray() {
        buttonGroupArray[0] = buttonGroup_ExternalInputs;
        buttonGroupArray[1] = buttonGroup_ExternalOutputs;
        buttonGroupArray[2] = buttonGroup_ExternalInquiries;
        buttonGroupArray[3] = buttonGroup_InternalLogicalFiles;
        buttonGroupArray[4] = buttonGroup_ExternalInterfaceFiles;
    }
    
    //Method: initRadioButtons()
    //Add all radio buttons to their corresponding groups.
    //Default all radio buttons to select "Average" weight.
    private void initRadioButtons() {
        buttonGroup_ExternalInputs.add(radioButton_Simple_ExternalInputs);
        buttonGroup_ExternalInputs.add(radioButton_Average_ExternalInputs);
        buttonGroup_ExternalInputs.add(radioButton_Complex_ExternalInputs);
        
        buttonGroup_ExternalOutputs.add(radioButton_Simple_ExternalOutputs);
        buttonGroup_ExternalOutputs.add(radioButton_Average_ExternalOutputs);
        buttonGroup_ExternalOutputs.add(radioButton_Complex_ExternalOutputs);
        
        buttonGroup_ExternalInquiries.add(radioButton_Simple_ExternalInquiries);
        buttonGroup_ExternalInquiries.add(radioButton_Average_ExternalInquiries);
        buttonGroup_ExternalInquiries.add(radioButton_Complex_ExternalInquiries);
        
        buttonGroup_InternalLogicalFiles.add(radioButton_Simple_InternalLogicalFiles);
        buttonGroup_InternalLogicalFiles.add(radioButton_Average_InternalLogicalFiles);
        buttonGroup_InternalLogicalFiles.add(radioButton_Complex_InternalLogicalFiles);
        
        buttonGroup_ExternalInterfaceFiles.add(radioButton_Simple_ExternalInterfaceFiles);
        buttonGroup_ExternalInterfaceFiles.add(radioButton_Average_ExternalInterfaceFiles);
        buttonGroup_ExternalInterfaceFiles.add(radioButton_Complex_ExternalInterfaceFiles);
        
        radioButton_Average_ExternalInputs.setSelected(true);
        radioButton_Average_ExternalOutputs.setSelected(true);
        radioButton_Average_ExternalInquiries.setSelected(true);
        radioButton_Average_InternalLogicalFiles.setSelected(true);
        radioButton_Average_ExternalInterfaceFiles.setSelected(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup_ExternalInputs;
    private javax.swing.ButtonGroup buttonGroup_ExternalInquiries;
    private javax.swing.ButtonGroup buttonGroup_ExternalInterfaceFiles;
    private javax.swing.ButtonGroup buttonGroup_ExternalOutputs;
    private javax.swing.ButtonGroup buttonGroup_InternalLogicalFiles;
    private javax.swing.JButton button_ChangeLanguage;
    private javax.swing.JButton button_ComputeCodeSize;
    private javax.swing.JButton button_ComputeFP;
    private javax.swing.JButton button_ValueAdjustments;
    private javax.swing.JLabel label_Average;
    private javax.swing.JLabel label_Complex;
    private javax.swing.JLabel label_CurrentLanguage;
    private javax.swing.JLabel label_ExternalInputs;
    private javax.swing.JLabel label_ExternalInquiries;
    private javax.swing.JLabel label_ExternalInterfaceFiles;
    private javax.swing.JLabel label_ExternalOutputs;
    private javax.swing.JLabel label_InternalLogicalFiles;
    private javax.swing.JLabel label_Simple;
    private javax.swing.JLabel label_Title;
    private javax.swing.JLabel label_TotalCount;
    private javax.swing.JRadioButton radioButton_Average_ExternalInputs;
    private javax.swing.JRadioButton radioButton_Average_ExternalInquiries;
    private javax.swing.JRadioButton radioButton_Average_ExternalInterfaceFiles;
    private javax.swing.JRadioButton radioButton_Average_ExternalOutputs;
    private javax.swing.JRadioButton radioButton_Average_InternalLogicalFiles;
    private javax.swing.JRadioButton radioButton_Complex_ExternalInputs;
    private javax.swing.JRadioButton radioButton_Complex_ExternalInquiries;
    private javax.swing.JRadioButton radioButton_Complex_ExternalInterfaceFiles;
    private javax.swing.JRadioButton radioButton_Complex_ExternalOutputs;
    private javax.swing.JRadioButton radioButton_Complex_InternalLogicalFiles;
    private javax.swing.JRadioButton radioButton_Simple_ExternalInputs;
    private javax.swing.JRadioButton radioButton_Simple_ExternalInquiries;
    private javax.swing.JRadioButton radioButton_Simple_ExternalInterfaceFiles;
    private javax.swing.JRadioButton radioButton_Simple_ExternalOutputs;
    private javax.swing.JRadioButton radioButton_Simple_InternalLogicalFiles;
    private javax.swing.JTextField textField_CodeSize;
    private javax.swing.JTextField textField_DisplayLanguage;
    private javax.swing.JTextField textField_FunctionPoints;
    private javax.swing.JTextField textField_Input_ExternalInputs;
    private javax.swing.JTextField textField_Input_ExternalInquiries;
    private javax.swing.JTextField textField_Input_ExternalInterfaceFiles;
    private javax.swing.JTextField textField_Input_ExternalOutputs;
    private javax.swing.JTextField textField_Input_InternalLogicalFiles;
    private javax.swing.JTextField textField_Output_ExternalInputs;
    private javax.swing.JTextField textField_Output_ExternalInquiries;
    private javax.swing.JTextField textField_Output_ExternalInterfaceFiles;
    private javax.swing.JTextField textField_Output_ExternalOutputs;
    private javax.swing.JTextField textField_Output_InternalLogicalFiles;
    private javax.swing.JTextField textField_TotalCount;
    private javax.swing.JTextField textField_ValueAdjustments;
    // End of variables declaration//GEN-END:variables
}
